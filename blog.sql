/*
 Navicat Premium Data Transfer

 Source Server         : net
 Source Server Type    : MySQL
 Source Server Version : 80019
 Source Host           : localhost:3306
 Source Schema         : blog

 Target Server Type    : MySQL
 Target Server Version : 80019
 File Encoding         : 65001

 Date: 14/12/2020 17:23:09
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for articles
-- ----------------------------
DROP TABLE IF EXISTS `articles`;
CREATE TABLE `articles`  (
  `article_id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT '博文ID',
  `user_id` bigint(0) NOT NULL COMMENT '发表用户ID',
  `article_title` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '博文标题',
  `article_content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '博文内容',
  `article_views` bigint(0) NOT NULL COMMENT '浏览量',
  `article_comment_count` bigint(0) NOT NULL COMMENT '评论总数',
  `article_date` datetime(0) NULL DEFAULT NULL COMMENT '发表时间',
  `article_like_count` bigint(0) NOT NULL COMMENT '点赞数',
  `article_preview` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  PRIMARY KEY (`article_id`) USING BTREE,
  INDEX `user_id`(`user_id`) USING BTREE,
  CONSTRAINT `articles_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 238 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of articles
-- ----------------------------
INSERT INTO `articles` VALUES (27, 2, 'EL', 'EL.md', 28, 0, '2020-12-04 22:24:37', 0, 'EL表达式 概念Exeio Laguage 作用替换和简化j页面中java代码的编写 语法${表达式} 注意j默认支持EL表达式，要忽略的话在age指令里加上iELIgoed=\"tue\"或者在$前加 \\  使用方式 运算 运算符1、算数运算');
INSERT INTO `articles` VALUES (28, 2, '这里是文章标题', '这里是文章标题.md', 15, 0, '2020-12-04 22:31:25', 0, '这里是edito的内');
INSERT INTO `articles` VALUES (30, 2, 'sdsd', 'sdsd.md', 2, 0, '2020-12-07 13:57:34', 0, NULL);
INSERT INTO `articles` VALUES (31, 2, 'test', 'test.md', 4, 0, '2020-12-07 13:58:29', 0, '这里是edito的内');
INSERT INTO `articles` VALUES (32, 3, '01、安装', '01、安装.md', 61, 0, '2020-12-07 19:31:46', 9, '1、安装------ 1、java安装java的安装不难，跟着提示下一步就好。但是安装完以后要配置环境变量，以下给大家说一下如何配置环境变量右击此电脑---属性---高级系统设置---环境变量在下面的系统变量处新建一个变量，名字是JAVA_');
INSERT INTO `articles` VALUES (33, 3, '02、基础知识', '02、基础知识.md', 1, 0, '2020-12-07 19:32:16', 0, '2、基础知识------ 1、注释 1.1、单行注释使用//来写单行注释，//到行末都是注释。 1.2、多行注释多行注释分为多行注释和文档注释。多行注释:/*   */通常用于对方法的注释文档注释:/**   */通常用于对类的注释或者文档');
INSERT INTO `articles` VALUES (34, 2, '08、继承', '08、继承.md', 0, 0, '2020-12-08 22:29:29', 0, '8、继承------ 1、概述面向对象的三大特性之一，是多态的前提主要解决的问题是**共性抽取**，用于抽取类之间相同的部分子类可以拥有父类的内容，也可以拥有自己的内容 2、继承的格式父类就是普通的类子类：javaulic cla 子类的名');
INSERT INTO `articles` VALUES (53, 26, '09、抽象类', '09、抽象类.md', 0, 0, '2020-12-10 19:24:29', 0, '9、抽象类------ 1、抽象抽象即具体的反义词，表示把物体共性抽取出来 2、格式抽象方法：ulic后面加上atact关键字，去掉大括号，直接分号结束javaulic atact void eat()抽象类：抽象方法所在的类一定是抽象类，');
INSERT INTO `articles` VALUES (54, 26, '10、接口', '10、接口.md', 0, 0, '2020-12-10 19:25:11', 0, '10、接口------ 1、概念接口即一种公共规范标准只要符合标准，就可以通用 2、定义基本格式接口就是多个类的公共规范，是引用数据类型最重要的就是其中的抽象方法javaulic iteface 接口名称{	//接口内容}备注：编译生成的字');
INSERT INTO `articles` VALUES (55, 26, '11、多态', '11、多态.md', 1, 0, '2020-12-10 19:26:08', 0, '11、多态------ 1、多态概述面向对象三大特征之一，即多种形态，例如一个人可以有学生形态，但同时也有人类形态 2、格式与使用代码当中体现多态性，其实就是一句话，父类引用指向子类对象格式：​	父类名称 对象名 = ew 子类名称()​	');
INSERT INTO `articles` VALUES (56, 26, '12、final关键字和权限修饰符', '12、final关键字和权限修饰符.md', 0, 0, '2020-12-10 19:26:58', 0, '12、fial关键字------ 1、概述fial代表最终，使用fial关键字后无法更改 2、使用 2.1、类javaulic fial cla{}使用fial关键字后，这个类不能有任何子类 2.1、方法javaulic fial 返回值 ');
INSERT INTO `articles` VALUES (57, 26, '13、内部类', '13、内部类.md', 0, 0, '2020-12-10 19:27:42', 0, '13、内部类------ 1、概述内部类即在类的内部在创建一个类分为成员内部类（直接在类中创建）局部内部类（在成员方法中创建）匿名内部类（局部内部类的一种，三种中最重要 2、定义**成员内部类**：java修饰符 cla 内部类名称{}成员');
INSERT INTO `articles` VALUES (58, 26, '14、常用API第二部分\r\n\r\n', '14、常用API第二部分\r\n\r\n.md', 0, 0, '2020-12-10 19:31:14', 0, '14、常用API第二部分------ 1、oject类 1.1、totig用于返回对象的字符串表示，比如数组，使用该方法后可以查看对应的字符串表示而无需遍历javaStig  = Aay.toStig(det) 1.2、equal方法用于比');
INSERT INTO `articles` VALUES (59, 26, '15、Collection集合', '15、Collection集合.md', 0, 0, '2020-12-10 19:33:07', 0, '15、Collectio集合------ 1、概述Collectio对象用于存储多个对象（变量）可以对这些对象（变量进行同时操作） 2、常用方法介绍 2.1、add方法oolea add(E e)添加一个元素，返回的布尔值为时候成功添加 2');
INSERT INTO `articles` VALUES (60, 27, '16、泛型', '16、泛型.md', 0, 0, '2020-12-10 19:35:15', 0, '16、泛型------ 1、概述泛型即未知的数据类型，在创建类时不确定传入的数据类型可以使用泛型。在创建对应的对象是需要指定数据类型，不然默认是oject类。 2、优势与劣势避免数据类型转换的麻烦，把运行期出现的异常提升到了编译期弊端：泛型');
INSERT INTO `articles` VALUES (62, 27, '17、数据结构', '17、数据结构.md', 1, 0, '2020-12-10 19:38:13', 0, '17、数据结构------ 1、栈先进后出，后进先出。入口和出口在同一侧 2、队列先进先出，入口出口不同侧，队尾进入，队首出来 3、数组查询块，增删慢增删必须要创建新数组 4、链表查询慢，增删块地址不是连续的，每次都必须从头开始查链表结构增');
INSERT INTO `articles` VALUES (63, 27, '18、list集合', '18、list集合.md', 0, 0, '2020-12-10 19:38:47', 0, '18、lit集合------ 1、概述lit接口继承了Collectio， 2、特点1、有序集合，存储元素和取出元素的顺序是一致的2、有索引3、允许存储重复的元素 3、特有方法javavoid add(it idex, E elemet)在');
INSERT INTO `articles` VALUES (64, 27, '19、set集合', '19、set集合.md', 1, 0, '2020-12-10 19:39:34', 0, '19、et集合------ 1、概述et接口是Collectio下的一个子接口，不允许重复，没有索引，不能使用普通fo循环遍历 2、HahSet集合实现了et接口，是一个无序集合，底层是哈希表，查询速度快 2.1、使用HahSetjava/');
INSERT INTO `articles` VALUES (65, 27, '20、Collections工具类', '20、Collections工具类.md', 0, 0, '2020-12-10 19:40:11', 0, '20、Collectio工具类------ 1、Collectio是一个操作数组的工具类 2、addALL方法同时添加多个元素到集合中，静态方法javaCollectio.addAll(lit,\"a\",\"\",\"c\",\"d\",\"e\")第一个参');
INSERT INTO `articles` VALUES (66, 27, '21、map集合', '21、map集合.md', 0, 0, '2020-12-10 19:43:35', 0, '21、ma集合------ 1、概述双列集合，是一个接口，有两个泛型，将键映射到值特点：​	1、双列集合，一个元素包含两个值（键值）​	2、Ma集合中的元素，键和值的数据类型可以相同也可以不同​	3、K不允许重复，Key与value一一对应');
INSERT INTO `articles` VALUES (67, 27, '22、异常', '22、异常.md', 0, 0, '2020-12-10 19:44:04', 0, '22、异常------ 1、异常概念指程序在执行过程中出现的非正常情况，会导致JVM的非正常停止，异常本来是一个类，产生异常就是创建异常对象并抛出。 2、异常体系最高父类thowale，子类eo和excetio 3、异常分类运行期异常、编译');
INSERT INTO `articles` VALUES (68, 28, '23、线程实现', '23、线程实现.md', 1, 0, '2020-12-10 19:45:52', 0, '23、线程实现------ 1、并发与并行并发：指多个事件在同一个时间段内发生（交替）并行：值多个时间在同一时刻发生（同时） 2、进程概念进入到内存的程序叫进程 3、线程概念线程属于进程，是进程的一个执行单元 4、线程调度1、分时调度2、抢');
INSERT INTO `articles` VALUES (69, 28, '24、java线程安全', '24、java线程安全.md', 4, 0, '2020-12-10 19:46:25', 0, '24、线程安全------ 1、线程安全问题概述多个线程在调用同一共享资源时可能会出现访问到不存在的数据或重复访问某个数据的问题 2、解决方法一、同步代码块格式javaychoized(锁对象){	可能出问题的代码}锁对象可以是任意对象，需');
INSERT INTO `articles` VALUES (70, 28, '25、等待唤醒', '25、等待唤醒.md', 0, 0, '2020-12-10 19:47:00', 0, '24、线程安全------ 25、等待唤醒------ 1、线程状态计时等待状态锁阻塞状态**无限等待状态**(调用wait方法等待，等otify方法唤醒) 2、睡眠和唤醒的代码实现java/** * 等待唤醒机制：线程之间的通信 *   ');
INSERT INTO `articles` VALUES (71, 28, '26、线程池', '26、线程池.md', 1, 0, '2020-12-10 19:49:16', 0, '26、线程池------ 1、概述多线程并发时，频繁的创建线程和销毁线程会降低系统效率线程池可以可以使线程执行完不销毁，继续执行别的任务线程池是一个容器，可以使用集合最好使用LikedLitThead集合(可以用别的) 2、实现思路但程序第');
INSERT INTO `articles` VALUES (72, 28, '27、Lambda表达式', '27、Lambda表达式.md', 0, 0, '2020-12-10 19:49:59', 0, '27、lamda表达式------ 1、函数式编程思想只要能获取到结果，谁去做的、怎么做的都不重要，只重视结果，不重视过程 2、lamda的标准格式由三部分组成参数，箭头，代码**格式**java(参数列表) - {重写方法的代码}**解释');
INSERT INTO `articles` VALUES (73, 28, '28、File类', '28、File类.md', 0, 0, '2020-12-10 19:50:33', 0, '28、File类------ 1、概述File类是一个封装了文件和文件夹的类，可以使用file类对文件夹和文件进行操作file类与系统无关，在任何系统下都可正常运作 2、成员变量file类有四个常用的成员变量**路径分隔符**javatat');
INSERT INTO `articles` VALUES (74, 28, '29、递归', '29、递归.md', 0, 0, '2020-12-10 19:51:35', 0, '29、递归------ 1、概述递归是指当前方法调用自己的现象 2、分类**直接递归**：方法直接调用自己**间接递归**：A方法调用B方法，B方法调用C方法，C方法调用A方法 3、注意递归要有条件限定，保证递归可以停下来，否则会栈内存溢出');
INSERT INTO `articles` VALUES (75, 29, '30、过滤器', '30、过滤器.md', 2, 0, '2020-12-10 19:59:31', 0, '30、过滤器------ 1、概述过滤器是用来定义文件查找中过滤方法的接口在File中有两个和LitFile重载的方法，传递的是过滤器 2、方法File[] litFile(FileFilte filte)方法接受一个过滤器，并按过滤器的定');
INSERT INTO `articles` VALUES (76, 29, '31、IO字符流', '31、IO字符流.md', 0, 0, '2020-12-10 20:00:14', 0, '30、过滤器------ 32、IO字符流------ 1、概述以字符形式传输数据，其他与字节流相似 2、输入流ReadeReade是字符输入流的最顶层父类，抽象类方法：javait ead()//读取单个字符并返回it ead(cah[]');
INSERT INTO `articles` VALUES (77, 29, '32、IO字节流', '32、IO字节流.md', 0, 0, '2020-12-10 20:01:11', 0, '30、过滤器------ 32、IO字符流------ 1、概述 31、IO字节流------ 1、概述硬盘的输入输出流**顶层四个父类**|        | 输入流                | 输出流               ');
INSERT INTO `articles` VALUES (78, 29, '33、Properties集合', '33、Properties集合.md', 1, 0, '2020-12-10 20:01:52', 0, '33、Poetie集合------ 1、概述继承了Hahtalek,v imlemet  Mak,vPoetie类表示了一个持久的属性集，Poetie可保存在流中或从流中加载，属性列表中每个键及其对应的值默认都是字符串格式是唯一和IO流相结');
INSERT INTO `articles` VALUES (79, 29, '34、缓冲流', '34、缓冲流.md', 0, 0, '2020-12-10 20:02:28', 0, '34、缓冲流------ 1、字节缓冲输出流BuffeedOututSteam字节缓冲输出流继承了OututSteam 1.1、构造javaBuffeedOututSteam(OututSteam out)// 创建一个新的缓冲输出流，以将');
INSERT INTO `articles` VALUES (80, 29, '35、转换流', '35、转换流.md', 0, 0, '2020-12-10 20:02:59', 0, '35、转换流------ 1、概述是字符与字节的桥梁，将要写入/读取的字符编码成字节主要功能是可以指定字符集 2、OututSteamWite字符通向字节的桥梁，将要写入流中的字符编码成字节 2.1、构造javaOututSteamWite');
INSERT INTO `articles` VALUES (81, 29, '36、序列化流', '36、序列化流.md', 0, 0, '2020-12-10 20:03:36', 0, '36、序列化流------ 1、概述OjectSteam用于将对象以流的形式（字节流）保存到文件中（或从文件中读取对象）将对象存到文件中叫做对象的序列化，读取叫做反序列化 2、OjectOututSteamOjectOututSteam继承');
INSERT INTO `articles` VALUES (82, 29, '37、打印流', '37、打印流.md', 0, 0, '2020-12-10 20:04:09', 0, '37、打印流------ 1、概述PitSteam位于IO包，继承了OututSteam，为其他输出流添加了功能，使他们能够更方便的打印各种数据值表示形式 2、特点只负责数据输出，不负责读取不会抛出IO异常特有方法有it和itl 3、构造j');
INSERT INTO `articles` VALUES (83, 30, '38、网络编程', '38、网络编程.md', 0, 0, '2020-12-10 20:08:50', 0, '38、网络编程------使用Socket类下的方法进行服务端与用户端的设置 1、客户端TCP通信的客户端，向服务器发送链接请求，给服务器发送数据**关键名词**Socket类：实现了客户端的套接字（两台机器的端点）套接字：包含一个流套接字');
INSERT INTO `articles` VALUES (84, 30, '39、常用函数式接口', '39、常用函数式接口.md', 0, 0, '2020-12-10 20:09:25', 0, '39、常用函数式接口------ 1、概述有且只有一个抽象方法的接口可以避免性能浪费一般作为方法的参数和返回值使用lamda表达式有延迟加载的特性例如使用lamda表达式作为参数传递，只有满足条件才会调用方法，如果条件不满足，接口中的方法不');
INSERT INTO `articles` VALUES (85, 30, '40、Stream流式编程', '40、Stream流式编程.md', 1, 0, '2020-12-10 20:10:03', 0, '40、Steam流------ 1、概述类似于流水线，流的数据源可以是集合数组等**有两个特征:**1. Pieliig：中间的操作都返回流对象本身2. 内部迭代：流可以直接调迭代方法(foeach) 2、获取Steam流的两种方式1. 所');
INSERT INTO `articles` VALUES (86, 30, '41、方法引用', '41、方法引用.md', 0, 0, '2020-12-10 20:10:32', 0, '41、方法引用------ 1、概述对lamda表达式的简化双冒号::为引用运算符，而它所在的表达式称为**方法引用**，如果lamda表达式要表达的函数式接口已经存在，要使用的方法也已经存在，这可以用过方法引用来优化lamda的书写 2、');
INSERT INTO `articles` VALUES (87, 30, '42、Junit单元测试', '42、Junit单元测试.md', 1, 0, '2020-12-10 20:11:15', 0, '42、Juit单元测试------ 1、测试分类 1.1、黑盒测试输入一个值，看输出的值是否符合预期，不需要写代码 1.2、白盒测试关注程序运行过程，需要写一些代码 2、Juit使用Juit属于白盒测试**步骤**1. 定义一个测试类（测试');
INSERT INTO `articles` VALUES (88, 30, '43、反射', '43、反射.md', 1, 0, '2020-12-10 20:12:42', 0, '43、反射------ 1、概述框架设计的灵魂将类的各个组成部分封装为其他对象，这就是反射机制可以在程序运行过程中操作这些对象可以解耦，提高程序可拓展性 2、获取Cla对象的三种方式 1、源代码阶段Cla.foame(\'全类名\')，将字节码');
INSERT INTO `articles` VALUES (89, 30, '44、注解', '44、注解.md', 0, 0, '2020-12-10 20:13:28', 0, '44、注解------ 1、概念 1.1、概念说明程序的，给计算机看的 1.2、定义注解也叫元数据，一种代码级别的说明，与类、接口、枚举是同一个层次，可以声明在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元素进行说明、注释 1');
INSERT INTO `articles` VALUES (90, 30, '45、JDBC', '45、JDBC.md', 0, 0, '2020-12-10 20:14:21', 0, '45、JDBC------ 1、概述java程序操作数据库的方法 2、使用步骤**1、导入驱动ja包**1. 复制包到li目录下2. 右键，add  a  liay加入项目**2、注册驱动**javaCla.foame(\"com.myql.');
INSERT INTO `articles` VALUES (91, 31, '01、MySQL基础知识与查询', '01、MySQL基础知识与查询.md', 0, 0, '2020-12-10 20:19:57', 0, '1、MySQL基础知识与查询------[TOC] 1、基本概念**特点**：1、持久化存储数据的，其实数据库是一个文件系统2、方便存储和管理数据3、使用了统一的方法操作数据库——SQL 2、数据库软件数据库概念的实现 3、MySQL的安装');
INSERT INTO `articles` VALUES (92, 31, '02、MySQL中的约束', '02、MySQL中的约束.md', 1, 0, '2020-12-10 20:20:51', 0, '2、MySQL中的约束------ 1、约束概念对表中数据进行限定，保证数据正确性、有效性和完整性。 2、分类主键约束 imay key非空约束 ot ull 唯一约束 uique外键约束 foeig key 3、非空约束即该列的值不能为空');
INSERT INTO `articles` VALUES (93, 31, '03、MySQL数据表设计，三大范式', '03、MySQL数据表设计，三大范式.md', 0, 0, '2020-12-10 20:21:22', 0, '3、数据库的三大范式------ 数据库的三大设计范式三大范式即三个创建数据表的准则，根据自己的实际需求决定是否遵守即可 1、第一范式，（1NF）数据表中的所有字段都是不可分割的原子值例如一个地址信息，如果全部存在一个字段中就不符合第一范式');
INSERT INTO `articles` VALUES (94, 31, '04、MySQL中的多表操作', '04、MySQL中的多表操作.md', 0, 0, '2020-12-10 20:22:32', 0, '3、MySQL中的多表操作------ 1、多表之间的关系 1.1、一对一如：人和身份证是意义对应的 1.2、一对多(多对一)如：部门和员工 1.3、多对多如：学生和课程 2、关系的实现 2.1、一对多(多对一)使用外键实现在多的一方建立外');
INSERT INTO `articles` VALUES (95, 31, '05、数据库的备份与还原', '05、数据库的备份与还原.md', 0, 0, '2020-12-10 20:23:05', 0, '4、数据库的备份与还原------ 1、备份qlmyqldum -u用户名 -密码 数据库名  保存的路径 2、还原1. 登录数据库2. 创建数据库3. 使用数据库4. 执行文件。ouce 路');
INSERT INTO `articles` VALUES (96, 31, '06、MySQL多表查询', '06、MySQL多表查询.md', 0, 0, '2020-12-10 20:23:48', 0, '5、MySQL多表查询------ 1、概述取出的是笛卡尔积，两张表中所有数据组合情况 2、分类 2.1、内连接需要明确以下内容：1. 从哪些表中查2. 条件是什么3. 查询哪些字段 2.1.1、隐式内连接使用whee条件消除无用数据qle');
INSERT INTO `articles` VALUES (97, 31, '07、视图与索引', '07、视图与索引.md', 0, 0, '2020-12-10 20:24:16', 0, '6、视图与索引------ 1、索引作用：提升查询效率使用：qlceate idex 索引名 o 表名(字段名)do idex 索引名 -- 删除elect * fom 表名 whee 字段=8特点：索引要依赖于某个字段显示的创建，隐式的执');
INSERT INTO `articles` VALUES (98, 31, '08、事务', '08、事务.md', 0, 0, '2020-12-10 20:25:23', 0, '8、事务------ 1、基本介绍 1.1、概念如果一个包含多个步骤的业务操作被事务管理，那这些操作要么同时成功，要么同时失败 1.2、操作1. 开启事务：tat  taactio2. 回滚：ollack3. 提交：commitMySQL数');
INSERT INTO `articles` VALUES (99, 32, '09、DCL', '09、DCL.md', 0, 0, '2020-12-10 20:27:37', 0, '9、DCL------ 1、管理用户 **1、查询用户**1、切换到myql数据库2、查询ue表 2、创建用户qlceate ue \'用户名\'@\'主机名\' idetified y \'密码\'-- %表示任意主机 3、删除用户qldo ue \'');
INSERT INTO `articles` VALUES (100, 32, '10、MySQL变量', '10、MySQL变量.md', 2, 0, '2020-12-10 20:28:22', 0, '10、MySQL变量------ 1、系统变量变量由系统提供，不是用户定义，属于服务器层面**使用语法**1、查看所有的系统变量qlhow gloal vaiale-- 参看所有全局变量how eio vaiale-- 查看所有会话变量，可');
INSERT INTO `articles` VALUES (101, 32, '11、MySQL存储过程', '11、MySQL存储过程.md', 0, 0, '2020-12-10 20:29:07', 0, '11、MySQL存储过程------ 1、存储过程含义：一组预先编译好的SQL语句集合，理解成批处理语句，类似于java中的方法 1.1、语法**创建**qlceate ocedue 存储过程名(参数列表) egi 存储过程体  ed注意：');
INSERT INTO `articles` VALUES (102, 32, '12、函数', '12、函数.md', 1, 0, '2020-12-10 20:29:39', 0, '12、函数------ 1、概述与过程相似，区别在返回值过程可以无返也可以有多个返回函数必须有一个返回，且只有一个过程适合批量插入、更新函数适合处理数据后返回值 2、创建语法qlceate Fuctio 函数名(参数列表) etu 返回类型');
INSERT INTO `articles` VALUES (103, 32, '13、流程控制', '13、流程控制.md', 0, 0, '2020-12-10 20:30:14', 0, '13、流程控制------ 1、if函数相当于三元运算符语法qlelect if(表达式1,表达式2，表达式3)表达式1为tue则返回表达式2的值，反之返回表达式3的值 2、cae结构 2.1、类似java中的witch语法qlcae 变量');
INSERT INTO `articles` VALUES (104, 32, '14、触发器', '14、触发器.md', 0, 0, '2020-12-10 20:30:46', 0, '14、触发器------ 1、概述触发器是一种与表操作有关的数据库对象，当触发器所在表上出现指定事件时，将调用该对象，即表的操作事件触发表上触发器的执行 2、创建ceate tigge 触发器名触发时机 取值为efoe或afte触发事件 取');
INSERT INTO `articles` VALUES (105, 24, 'Bootstrap', 'Bootstrap.md', 3, 0, '2020-12-10 20:36:52', 0, '1、概述一个前端开发的框架​	**框架**：一个半成品软件，开发人员可以在框架基础上二次开发，可以简化编码​	**好处**：1. 定义了很多c样式和j插件，开发人员可以直接使用这些样式和插件得到丰富的页面效果2. 响应式布局，同一套页面可以');
INSERT INTO `articles` VALUES (106, 24, '01、JavaScript简介', '01、JavaScript简介.md', 1, 0, '2020-12-10 20:37:38', 0, '1、JavaScit简介------ 1、JavaScit简介**概念**：一门客户端脚本语言​	运行在客户端浏览器中​	脚本语言不需要编译，直接可以被浏览器解析执行**功能**：​	可以增强用户和HTML页面的交互，可以控制HTML元素，');
INSERT INTO `articles` VALUES (107, 24, '02、常用内置对象', '02、常用内置对象.md', 2, 0, '2020-12-10 20:38:11', 0, '2、常用内置对象------ 1、fuctio对象描述方法1、创建：1. ​	va fu = ew Fuctio(形参表，方法体)2. fuctio 方法名称(形参表){方法体}3. va 方法名 = fuctio(){}2、方法3、属性​');
INSERT INTO `articles` VALUES (108, 24, '03、BOM对象', '03、BOM对象.md', 3, 0, '2020-12-10 20:38:41', 0, '3、BOM对象------ BOM简介功能：控制HTML文档的内容代码：获取页面的标签（元素）对象Elemetjavacitdocumet.getElemetById(\"Id值\")操作Elemet对象：1. 设置属性值：明确获取的对象是哪一');
INSERT INTO `articles` VALUES (109, 24, '04、DOM对象', '04、DOM对象.md', 2, 0, '2020-12-10 20:39:08', 0, '4、DOM对象------ 1、概念Documet oject  model 文档对象模型将标记语言文档的各个组成部分，封装为对象，可以使用这些对象，对标记语言文档进行CRUD操作 2、核心DOM1. Documet：文档对象2. Elem');
INSERT INTO `articles` VALUES (110, 24, '05、事件', '05、事件.md', 0, 0, '2020-12-10 20:39:44', 0, '5、事件------ 1、概述某些组件被执行了某些操作后，触发某些代码的执行 事件源组件，按钮，输入框 监听器代码 注册监听将事件，事件源，监听器结合在一起，当事件源上发生了某个事件，就触发某个监听器代码 2、常见事件 2.1、点击事件oc');
INSERT INTO `articles` VALUES (111, 24, 'python学习笔记（六）抽象', 'python学习笔记（六）抽象.md', 0, 0, '2020-12-10 20:40:47', 0, '六、抽象（函数）在大型项目中，经常有一些功能要重复使用，为了编程的效率，不可能每使用一次就要写一次相关代码。而应该把这些代码写成函数，使用时调用即可。 1、自定义函数使用def来定义函数def hello(ame):	etu \'Hello,');
INSERT INTO `articles` VALUES (112, 33, '二、列表和元组', '二、列表和元组.md', 0, 0, '2020-12-10 20:43:36', 0, '二、列表和元组 1、序列概述ytho内置了多种序列，本章重点讨论其中最常用的两种：**列表**和**元组**。另一种重要的序列是字符串。列表和元组主要的不同在于，列表是可以修改的，而元组不行。所以列表适用于需要中途添加元素的情况，而元组适用');
INSERT INTO `articles` VALUES (113, 33, '三、使用字符串', '三、使用字符串.md', 1, 0, '2020-12-10 20:44:12', 0, '三、使用字符串 1、字符串基本操作所有的标准序列操作都适用于字符串，但是字符串不可变，所以不可以给字符串赋值。 2、设置字符串的格式 替换字段名在最简单的情况下，只需向fomat提供要设置其格式的未命名参数，并在格式字符串中使用未命名字段。');
INSERT INTO `articles` VALUES (114, 33, '四、字典', '四、字典.md', 0, 0, '2020-12-10 20:44:50', 0, '四、字典 1、字典的用途字典通过键值对来存储数据，经常用来储存有关联的几组数据。在需要处理较多数据时用的很频繁 2、创建和使用字典字典通过以下方式创建ythohoeook = {\'Alice\':\'2341\',\'Beth\':\'9102\',\'C');
INSERT INTO `articles` VALUES (115, 33, '五、条件、循环及其他语句', '五、条件、循环及其他语句.md', 0, 0, '2020-12-10 20:45:21', 0, '五、条件、循环及其他语句 1、再谈it和imot 1.1、打印多个参数it不仅可以打印一个表达式，还可以同时打印多个表达式，条件是用逗号分隔。ytho it(\'Age:\',42)Age: 42如你所见，打印后的两个参数之间有一个空格。在你要');
INSERT INTO `articles` VALUES (116, 33, '一、基础知识', '一、基础知识.md', 0, 0, '2020-12-10 20:45:56', 0, '一、基础知识本文主要介绍ytho开始学习应该掌握的一些基础知识。 1、算法算法即解决一个问题的方法，由一系列必须按照顺序执行的操作说明组成，其中有些可以直接完成，有些需要特别注意，还有一些粗腰重复多次。 2、数和表达式交互式ytho解释器可');
INSERT INTO `articles` VALUES (117, 29, '[Canvas前端游戏开发]——FlappyBird详解', '[Canvas前端游戏开发]——FlappyBird详解.md', 0, 0, '2020-12-12 23:15:06', 0, 'lockquote一直想自己做点小东西，直到最近看了本《a hef=\"htt://a.aidu.com/1jXhO2x\" taget=\"_lak\"HTML5游戏开发/a》，才了解游戏开发中的一点点入门知识。本篇就针对学习的几个样例，自己动手');
INSERT INTO `articles` VALUES (118, 29, '【python游戏编程之旅】第九篇---嗷大喵快跑小游戏开发实例', '【python游戏编程之旅】第九篇---嗷大喵快跑小游戏开发实例.md', 1, 0, '2020-12-12 23:21:34', 0, '本系列博客介绍以ytho+ygame库进行小游戏的开发。有写的不对之处还望各位海涵。前几期博客我们一起学习了，ygame中的a hef=\"htt://www.clog.com/mxh//5027688.html\" taget=\"_lak\"冲');
INSERT INTO `articles` VALUES (119, 29, 'javascript开发HTML5游戏--斗地主(单机模式part1)', 'javascript开发HTML5游戏--斗地主(单机模式part1).md', 0, 0, '2020-12-12 23:22:28', 0, '　  最近学习使用了一款HTML5游戏引擎(a hef=\"htt://www.zuoyouxi.com/\" taget=\"_lak\"青瓷引擎/a)，并用它尝试做了一个斗地主的游戏，简单实现了单机对战和网络对战，代码可已放到githu上，在此');
INSERT INTO `articles` VALUES (120, 29, 'Silverlight MMORPG网页游戏开发课程[一期] 第一课：控制对象移动', 'Silverlight MMORPG网页游戏开发课程[一期] 第一课：控制对象移动.md', 0, 0, '2020-12-12 23:23:18', 0, '**引言o:/o:**游戏中的主角是精灵，我们可以把游戏中的一切对象均视作精灵；玩家大部分时间都在操控着游戏中对象进行移动。因而本节我们要实现的功能只有一个：通过鼠标控制对象移动。o:/o:tog tyle=\"mo-idi-fot-weig');
INSERT INTO `articles` VALUES (121, 29, 'Silverlight 游戏开发小技巧：昼夜交替动画', 'Silverlight 游戏开发小技巧：昼夜交替动画.md', 1, 0, '2020-12-12 23:24:20', 0, '记得在WP7上玩一个游戏有段动画很有趣，是背景在进行昼夜交替，一会儿白天太阳出来白天了，一会儿月亮蹦出来夜晚了，在以前做C++程序的时候曾经实现过类似的效果，今天早上移植了一下到Silvelight当中效果还是不错，当然了，有了Bled神器');
INSERT INTO `articles` VALUES (122, 29, 'Silverlight游戏开发心得（1）——调度器', 'Silverlight游戏开发心得（1）——调度器.md', 0, 0, '2020-12-12 23:24:58', 0, '**前言：　　** 说实话，很久没有正儿八经写东西了，都不知道咋写了。如果不幸看到这篇文章的哥们们，凑合看吧。　　我这个比不了深蓝的东西，也不是教程。只能说是拾人牙慧，人云亦云吧，从各种书籍里汲取自己能看得懂的东西，结合自己的开发经验，弄成');
INSERT INTO `articles` VALUES (123, 29, 'Unity3D游戏开发初探—4.开发一个“疯狂击箱子”游戏', 'Unity3D游戏开发初探—4.开发一个“疯狂击箱子”游戏.md', 1, 0, '2020-12-12 23:25:49', 0, '一、预备知识—对象的”生“与”死“　　（1）如何在游戏脚本程序中创建对象而不是一开始就创建好对象？-使用GameOject的静态方法：**CeatePimitive()****　　**以上一篇的博文中的“指哪打哪”例子为基础，在AddFoc');
INSERT INTO `articles` VALUES (124, 29, '趣说游戏AI开发：对状态机的褒扬和批判', '趣说游戏AI开发：对状态机的褒扬和批判.md', 0, 0, '2020-12-12 23:27:38', 0, '0x00 前言因为临近年关工作繁忙，已经有一段时间没有更新博客了。到了元旦终于有时间来写点东西，既是积累也是分享。如题目所示，本文要来聊一聊在游戏开发中经常会涉及到的话题——游戏AI。设计游戏AI的目标之一是要找到一种便于使用并容易拓展的的');
INSERT INTO `articles` VALUES (125, 29, '用canvas开发H5游戏小记', '用canvas开发H5游戏小记.md', 0, 0, '2020-12-12 23:28:27', 0, '　　自神经猫风波之后，微信中的各种小游戏如雨后春笋般目不暇接，这种低成本，高效传播的案例很是受开发者青睐。作为一名前端，随手写个这样的小游戏出来应该算是必备技能吧。恰逢中秋节，部门决定上线一个小游戏，在微信里传播一下与用户互动互动。这任务自');
INSERT INTO `articles` VALUES (126, 29, '炸弹人游戏开发系列（1）：准备工作', '炸弹人游戏开发系列（1）：准备工作.md', 0, 0, '2020-12-12 23:29:00', 0, '**前言**大家好！本系列博文记录了炸弹人游戏迭代开发的过程。在开发的过程中，代码会不断重构，领域模型会不断演变，高层划分也会不断变化。博文重点在于记录面向对象思想运用、重构、迭代开发的过程，对于游戏的实现细节和原理不会深入讨论。如果您对R');
INSERT INTO `articles` VALUES (127, 29, 'IIS日志-网站运维的好帮手', 'IIS日志-网站运维的好帮手.md', 0, 0, '2020-12-12 23:30:13', 0, '对于一个需要长期维护的网站来说，如何让网站长久稳定运行是件很有意义的事情。有些在开发阶段没有暴露的问题很有可能就在运维阶段出现了，这也是很正常的。还有些时候，我们希望不断地优化网站，让网站更快速的响应用户请求，这些事情都发生在开发之后的运维');
INSERT INTO `articles` VALUES (128, 29, 'saltstack高效运维', 'saltstack高效运维.md', 0, 0, '2020-12-12 23:30:43', 0, 'alt介绍alttack是由thoma Hatch于2011年创建的一个开源项目，设计初衷是为了实现一个快速的远程执行系统。 alt强大吗系统管理员日常会进行大量的重复性操作，例如安装软件，修改配置文件，创建用户，批量执行命令等等。如果主机');
INSERT INTO `articles` VALUES (129, 29, 'SSH 运维总结', 'SSH 运维总结.md', 0, 0, '2020-12-12 23:31:18', 0, '对于liux运维工作者而言，使用h远程远程服务器是再熟悉不过的了！对于h的一些严格设置也关系到服务器的安全维护，今天在此，就本人工作中使用h的经验而言，做一些总结记录来下。-ah: h: commad ot foud解决办法：\"yum it');
INSERT INTO `articles` VALUES (130, 29, '写给运维兄弟', '写给运维兄弟.md', 0, 0, '2020-12-12 23:32:16', 0, '写在前面的故事　　首先，给看官们讲个故事：最近遇到过一个客户，系统上线三年变的越来越慢，直到前几个月全面爆发，系统前端使用人员不断抱怨，甚至已经达到了不能使用的程度。这个时候他们的IT主管也是决策者无法忍受这种情况，就召集下面的运维开会，询');
INSERT INTO `articles` VALUES (131, 29, '运维工程师主要工作是做什么？', '运维工程师主要工作是做什么？.md', 1, 0, '2020-12-12 23:32:52', 0, '总结两句话：1、保障业务长期稳定运行（如网站服务器、游戏服务器等）。2、保障数据安全可靠（如用户名密码、游戏数据、博客文章、交易数据等）。由这两句话推演运维工程师要学些什么？一、保障业务长期稳定运行出一点点差错，用户就要投诉了。1、业务跑在');
INSERT INTO `articles` VALUES (132, 29, '运维监控系统之Open-Falcon', '运维监控系统之Open-Falcon.md', 0, 0, '2020-12-12 23:33:46', 0, '一、Oe-Falco介绍1、监控系统，可以从运营级别（基本配置即可），以及应用级别（二次开发，通过端口进行日志上报），对服务器、操作系统、中间件、应用进行全面的监控，及报警，对我们的系统正常运行的作用非常重要。2、基础监控CPU、Load、');
INSERT INTO `articles` VALUES (133, 29, '自动化运维_Ansible', '自动化运维_Ansible.md', 0, 0, '2020-12-12 23:34:26', 0, '**1.****前言**Aile是自动化运维的工具，基于Pytho开发，实现了批量系统配置、批量程序部署、批量运行命令等功能。Aile是基于模块工作的，aile提供一个框架，通过模块实现批量部署。img c=\"htt://image2015');
INSERT INTO `articles` VALUES (134, 29, '5G 中小区搜索', '5G 中小区搜索.md', 0, 0, '2020-12-12 23:35:10', 0, '**学习的博客原文：htt://log.cd.et/GYK0812/aticle/detail/90739007**基站上面小区激活后，在UE接入之前会干什么？发PBCH，PPSS，PSSS等在后面进行讲解。这个地方讲述UE开机后，进行什么');
INSERT INTO `articles` VALUES (135, 29, '5G，仅仅是更快的网速吗？', '5G，仅仅是更快的网速吗？.md', 0, 0, '2020-12-12 23:35:48', 0, 'ectio id=\"ice\" tyle=\"addig: 10x wod-wa: eak-wod fot-family: Otima-Regula, Otima, PigFagSC-light, PigFagTC-light, \"PigFag');
INSERT INTO `articles` VALUES (136, 29, '本文详解5G是个什么鬼，程序员都准备好了吗？', '本文详解5G是个什么鬼，程序员都准备好了吗？.md', 0, 0, '2020-12-12 23:36:18', 0, '**无线移动通讯发展历史**最近5G的概念炒的如火如荼，为此，华为和高通还干了一仗。这篇文章从技术层面给大家分析，什么是5G，它和4G比，高级在哪里？我们来看看移动互联网的技术发展：img c=\"htt://mmiz.qic.c/mmiz_');
INSERT INTO `articles` VALUES (137, 29, '功能齐全、效率一流的免费开源数据库导入导出工具', '功能齐全、效率一流的免费开源数据库导入导出工具（c#开发，支持SQL server、SQLite、ACCESS三种数据库），每月借此处理数据5G以上.md', 0, 0, '2020-12-12 23:37:00', 0, '软件名：DataPie功能：支持SQL eve、SQLite、ACCESS数据库的导入、导出、存储过程调用，支持EXCEL2007、EXCEL2003、ACCESS2007、 CSV文件导入数据库，支持EXCEL、CSV、ZIP、ACCES');
INSERT INTO `articles` VALUES (138, 29, '解读5G标准：5G频率范围与频段', '解读5G标准：5G频率范围与频段.md', 7, 0, '2020-12-12 23:37:29', 0, 'a hef=\"htt://log.cd.et/ZhogGuoReMei/aticle/detail/103639795\"htt://log.cd.et/ZhogGuoReMei/aticle/detail/103639795/a以5G波段为');
INSERT INTO `articles` VALUES (139, 29, '深入浅出：5G和HTTP', '深入浅出：5G和HTTP.md', 0, 0, '2020-12-12 23:37:59', 0, '本文将会讲到5G和HTTP。曾经在a hef=\"htt://www.clog.com/cofach//10050437.html\" taget=\"_lak\"深入浅出经典面试题：从浏览器中输入URL到页面加载发生了什么 - Pat 3/a 提');
INSERT INTO `articles` VALUES (140, 29, '为什么SSB与preamble occasion能够关联？', '为什么SSB与preamble occasion能够关联？.md', 0, 0, '2020-12-12 23:38:27', 0, '**原文链接：htt://log.cd.et/qq_33206497/aticle/detail/89931762**5G中有SSB和eam概念，这里面是什么关系？先从几个问题入手： 为什么SSB与eamle occaio能够关联？**疑问');
INSERT INTO `articles` VALUES (141, 29, 'Android WebRTC 音视频开发总结', 'Android WebRTC 音视频开发总结.md', 1, 0, '2020-12-12 23:39:33', 0, 'www.clog.com/ligyuhu//3621057.html前面介绍了WeRTCDemo的基本结构，本节主要介绍WeRTC音视频服务端的处理，，转载请说明出处（博客园RTC.Blacke）。通过前面的例子我们知道运行WeRTCDem');
INSERT INTO `articles` VALUES (142, 29, 'android音视频点直播模块开发', 'android音视频点直播模块开发.md', 1, 0, '2020-12-12 23:40:10', 0, 'lael音视频 /lael版权声明：本文为博主原创文章，未经博主允许不得转载。 前言随着音视频领域的火热，在很多领域（教育，游戏，娱乐，体育，跑步，餐饮，音乐等）尝试做音视频直播/点播功能，那么作为开发一个小白，如何快速学习音视频基础知识，');
INSERT INTO `articles` VALUES (143, 29, 'Android音视频点直播模块开发实践总结', 'Android音视频点直播模块开发实践总结.md', 1, 0, '2020-12-12 23:40:42', 0, 'lockquote随着音视频领域的火热，在很多领域（教育，游戏，娱乐，体育，跑步，餐饮，音乐等）尝试做音视频直播/点播功能。那么作为开发一个小白，如何快速学习音视频基础知识，了解音视频编解码的传输协议，编解码方式，以及如何技术选型，如何解决');
INSERT INTO `articles` VALUES (144, 29, 'yun2win即时通讯云', 'yun2win即时通讯云.md', 2, 0, '2020-12-12 23:41:14', 0, 'yu2wi官网：a hef=\"htt://www.yu2wi.com\" taget=\"_lak\"www.yu2wi.com/aSDK下载地址：a hef=\"htt://www.yu2wi.com/h-col-107.html\" taget=');
INSERT INTO `articles` VALUES (145, 29, '音视频即时通讯—Android 视频开发', '音视频即时通讯—Android 视频开发.md', 0, 0, '2020-12-12 23:49:10', 0, '移动互联网随着智能手机的普及应用越来越广泛，所谓移动互联网是将移动通信和互联网整合在一起，使移动设备（包括手机和上网本、Pad平台）可以随时随地地访问互联网资源和应用获取相应的信息和处理。从2011年开始，“三网融合”正式被国务院纳入十二五');
INSERT INTO `articles` VALUES (146, 29, '音视频开发-FFmpeg', '音视频开发-FFmpeg.md', 0, 0, '2020-12-12 23:49:33', 0, '　　音视频开发是个非常复杂的，庞大的开发话题，初涉其中，先看一下结合 a cla=\"Lik ztext-lik\" hef=\"htt://www.clog.com/zhouxi//12568967.html\" taget=\"_lak\" dat');
INSERT INTO `articles` VALUES (147, 29, '音视频开发学习', '音视频开发学习.md', 0, 0, '2020-12-12 23:50:00', 0, '著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。作者：姚冬链接：htt://www.zhihu.com/quetio/31156766/awe/54645514来源：知乎我们先假设某人在音视频方面是零基础，也没学过任何数');
INSERT INTO `articles` VALUES (148, 29, '百人研发团队的难题：研发管理、绩效考核、组织文化和OKR', '百人研发团队的难题：研发管理、绩效考核、组织文化和OKR.md', 1, 0, '2020-12-12 23:50:40', 0, 'lockquote分享一个公司规模近200，研发占一半的创业公司 Woktile 在研发团队管理方面的玩法，仅供百人左右研发团队参考~/lockquote什么是研发团队？简单的说，你熟悉的那帮穿格子衬衫，以程序员为核心组成的团队，就是研发团');
INSERT INTO `articles` VALUES (149, 29, '从研发管理系统看项目管理', '从研发管理系统看项目管理.md', 0, 0, '2020-12-12 23:51:06', 0, '记录之前参加的一次“研发管理系统”发布会的感想~项目管理，一个熟悉得不能再熟悉的词语，专业的解释：项目管理是一个管理学分支的学科，指在项目活动中运用专门的知识、技能、工具和方法，使项目能够在有限资源限定条件下，实现或超过设定的需求和期望。项');
INSERT INTO `articles` VALUES (150, 29, '大型信息化建设标准基础数据管理平台【商业版，铜墙铁壁】', '大型信息化建设标准基础数据管理平台【商业版，铜墙铁壁】.md', 2, 0, '2020-12-12 23:51:28', 0, '大概在3年前，我们集团公司杭州分公司刚刚成立，那时候公司的招聘还不够规范，没有独立的人力资源部，其实到现在为止也没有确切的人力资源部，公司并不是几千人，上万人的大公司，由办公室来统一管理招聘工作，办公室的招聘工作流程大致是这样的。1：网上发');
INSERT INTO `articles` VALUES (151, 29, '几个软件研发团队管理的小问题', '几个软件研发团队管理的小问题.md', 3, 0, '2020-12-12 23:52:04', 0, '最近在与一位总经理交流的时候，他谈到他们公司的软件研发管理，说：“我们公司最大的问题是项目不能按时完成，总要一拖再拖。”他问我有什么办法能改变这个境况。从这样一个问题开始，在随后的交谈中，又引出他一连串在软件研发管理中的遇到的问题，包括：*');
INSERT INTO `articles` VALUES (152, 29, '绩效，历练与成长---研发管理的天平', '绩效，历练与成长---研发管理的天平.md', 1, 0, '2020-12-12 23:52:26', 0, '　　曾经有个新入职的小伙伴问我这么一个问题：“老大，像我这样的菜鸟，是不是还有很多东西要学？感觉现在压力好大，每个方面都缺好多，学不过来”。　　我只回了他两个字：“淡定！”　　这是每个研发团队都会面临的难题，当一个新人并不具备足够的工作能力');
INSERT INTO `articles` VALUES (153, 29, '研发管理：与员工一对一交流的执行与反思', '研发管理：与员工一对一交流的执行与反思.md', 1, 0, '2020-12-12 23:52:51', 0, '一对一交流的想法来源两篇文章：《a hef=\"htt://www.36k.com//151617.html\"与员工一对一交流：企业经营必行之道/a》，《a hef=\"htt://www.36k.com//148857.html\"你知道我今天');
INSERT INTO `articles` VALUES (154, 29, '研发中间件介绍#定时任务调度与管理JobCenter', '研发中间件介绍#定时任务调度与管理JobCenter.md', 0, 0, '2020-12-12 23:53:22', 0, '郑昀 最后更新于2014/11/11关键词：定时任务、调度、监控报警、Jo、cota、Javah本文档适用人员：研发员工**没有JoCete时我们要面对的：** 电商业务链条很长，业务逻辑也较为复杂，需要成百上千种定时任务。窝窝的大多数定时');
INSERT INTO `articles` VALUES (155, 29, '程序开发与信息安全工具箱', '程序开发与信息安全工具箱.md', 2, 0, '2020-12-12 23:54:41', 0, '程序开发与信息安全工具箱a ame=\"FHML\"/a 索引- a hef=\"SECA\"A/a、a hef=\"SECB\"B/a、a hef=\"SECC\"C/a、a hef=\"SECD\"D/a、a hef=\"SECE\"E/a、a hef=\"SE');
INSERT INTO `articles` VALUES (156, 29, '给信息安全爱好者的一封信', '给信息安全爱好者的一封信.md', 1, 0, '2020-12-12 23:55:08', 0, '学习信息安全的心路历程 前言我从华为回来以后，陆续收到了很多封来信，其中提到最多的就是该如何学习信息安全这一领域的东西。我相信很多朋友无非就是对电影里面的黑客几行代码入侵政府网站的场景十分的敬佩与仰慕，当然我也不例外。作为一个正义的白帽子，');
INSERT INTO `articles` VALUES (157, 29, '给信息安全专业学生的书单', '给信息安全专业学生的书单.md', 1, 0, '2020-12-12 23:56:00', 0, '给信息安全专业学生的书单对我来说,读书是最重要的一项娱乐活动。我基本上是保持一周读一本书的节奏，这里的a hef=\"htt://ook.doua.com/eole/ocflytoky/collect\" taget=\"_lak\"读书列表/a记');
INSERT INTO `articles` VALUES (158, 29, '关于信息安全的学习', '关于信息安全的学习.md', 0, 0, '2020-12-12 23:57:35', 0, '0x00.前言  应钟老师的邀请，给304实验室的同学们做了一个关于如何学习信息安全的讲座。　　　正好总结一下关于信息安全方面的学习方法，以后也可以给学弟学妹们参考一下。 0x01.正文　　（1）信息安全简介：　　　　信息安全呢，是目前一个');
INSERT INTO `articles` VALUES (159, 29, '信息安全--仿射密码', '信息安全--仿射密码.md', 0, 0, '2020-12-12 23:57:59', 0, '说明：加法密码和乘法密码结合就构成仿射密码，仿射密码的加密和解密算法是：C=Ek(m)=(k1m+k2) mod M= Dk(c)=k3(c- k2) mod (其中(k3 ×k1)mod26 = 1)仿射密码具有可逆性的条件是:gcd(k');
INSERT INTO `articles` VALUES (160, 29, '信息安全复习题', '信息安全复习题.md', 0, 0, '2020-12-12 23:58:37', 0, '信息安全复习题一、单项选择题1．计算机网络面临最大威胁是        。A．操作员安全配置不当          B. 用户安全意识不强C．人为的恶意攻击              D. 账号共享2. 身份认证的主要目标包括：确保交易者是');
INSERT INTO `articles` VALUES (161, 29, '信息安全实习生面试小结', '信息安全实习生面试小结.md', 1, 0, '2020-12-12 23:59:06', 0, '**0x00前言**第一次面试没有经验，第一个面试电话接到的时候手都在抖2333，但到面试了几个公司后，也渐渐放得开了许多今年9月份就步入大四，因此再4月份时候也参加过几家公司的安全类的实习生的面试，其中有甲方公司，也有乙方公司。实习是找到');
INSERT INTO `articles` VALUES (162, 29, 'Devops相关考试和认证', 'Devops相关考试和认证.md', 0, 0, '2020-12-12 23:59:42', 0, 'Devo相关考试和认证 Red Hat Cetified Sytem Admiitato (RHCSA)- 能够执行以下任务:- 了解和运用必要的工具来处理文件、目录、命令行环境和文档- 操作运行中的系统，包括引导到不同的运行进程、识别流程');
INSERT INTO `articles` VALUES (163, 29, 'kubernetes学习：CKA考试认证', 'kubernetes学习：CKA考试认证.md', 0, 0, '2020-12-13 00:00:12', 0, '考点CKA认证针对考核成为当业界的Kueete管理员所需的技能。CKA认证考试包括这些一般领域及其在考试中的权重：taletodyt cla=\"fitRow\"td valig=\"to\" width=\"283\"应用程序生命周期管理 -8％/t');
INSERT INTO `articles` VALUES (164, 29, 'Oracle顶级认证OCM考试实战总结', 'Oracle顶级认证OCM考试实战总结.md', 1, 0, '2020-12-13 00:00:36', 0, 'OCM是Oacle认证体系中最顶级的证书和技能考试，通过后将成为企业内的资深专家，IT认证考试资源网应广大考生的要求制作了一个OCM考试实战总结，就是为了广大Oacle考生了解神秘的OCM考试流程和大致考点内容，以期更好地有针对性的学习相关');
INSERT INTO `articles` VALUES (165, 29, 'RPA流程自动化-Blueprism认证考试介绍', 'RPA流程自动化-Blueprism认证考试介绍.md', 1, 0, '2020-12-13 00:01:02', 0, '**RPA流程自动化-Blueim认证考试介绍**接触RPA有一段时间了，几种RPA相关工具也都试用过，BluePim是RPA工具的一种，今天跟大家分享考Blueim的一些经验。RPA(Root Poce Automatio)全称是机器人流');
INSERT INTO `articles` VALUES (166, 29, '腾讯云认证云从业者考试系列 腾讯云从业者认证考试内容、范围、学习资料', '腾讯云认证云从业者考试系列 腾讯云从业者认证考试内容、范围、学习资料.md', 0, 0, '2020-12-13 00:01:30', 0, '本文列举腾讯云从业者认证的**考试范围、知识点、分数比例、教程学习地址、一些官方资料文档**。 目录1，考核要求、知识点分布2，课程大纲、分数值比例3，学习路线4，学习帮助5，学习资源导航6，腾讯云从业者认证 资料共享、例题分析、习题实战h');
INSERT INTO `articles` VALUES (167, 29, '微软.NET认证考试详细介绍', '微软.NET认证考试详细介绍.md', 0, 0, '2020-12-13 00:02:44', 0, '一旦你已经决定好了考.NET开发人员的认证，下一步就是去了解.NET微软认证解决方案开发专家（MCSD.NET）和微软认证应用程序开发专家（MCAD）的认证要求了。现在让我们来看看每个认证的要求，再探讨一下微软为什么会在认证考试的设计上做出');
INSERT INTO `articles` VALUES (168, 29, '我如何通过K8S开发认证（CKAD）考试', '我如何通过K8S开发认证（CKAD）考试.md', 0, 0, '2020-12-13 00:03:09', 0, '题记：笔者最近经过3个多月的空余时间准备，终于通过了K8S开发认证（CKAD）的考试，在这里简单给大家分享一下经验。 一，先科普下CKAD众所周知，Kueete在容器编排器大战中脱颖而出后，过去1，2年变得越发的火热。那么云原生计算基金会（');
INSERT INTO `articles` VALUES (169, 29, '15个nosql数据库', '15个nosql数据库.md', 2, 0, '2020-12-13 00:07:57', 0, '1、MogoDB**介绍**MogoDB是一个基于分布式文件存储的数据库。由C++语言编写。主要解决的是海量数据的访问效率问题，为WEB应用提供可扩展的高性能数据存储解决方案。当数据量达到50GB以上的时候，MogoDB的数据库访问速度是M');
INSERT INTO `articles` VALUES (170, 29, 'MongoDB数据库', 'MongoDB数据库.md', 0, 0, '2020-12-13 00:08:23', 0, '什么是MogoDB ?MogoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。在高负载的情况下，添加更多的节点，可以保证服务器性能。MogoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。MogoDB 将数据');
INSERT INTO `articles` VALUES (171, 29, 'mysql 数据库引擎', 'mysql 数据库引擎.md', 0, 0, '2020-12-13 00:08:48', 0, '一、数据库引擎　　**数据库引擎**是用于存储、处理和保护数据的核心服务。利用数据库引擎可控制访问权限并快速处理事务，从而满足企业内大多数需要处理大量数据的应用程序的要求。 使用数据库引擎创建用于联机事务处理或联机分析处理数据的关系数据库。');
INSERT INTO `articles` VALUES (172, 29, '创建数据库迁移', '创建数据库迁移.md', 3, 0, '2020-12-13 00:09:35', 0, '**a hef=\"htt://www.clog.com/fa//4849791.html\"返回总目录《一步一步使用ABP框架搭建正式项目系列教程》/a**h 这一节我们说说数据库迁移（Migatio）。我们之前用的DBFit创建了实体类，但');
INSERT INTO `articles` VALUES (173, 29, '多数据库有序GUID', '多数据库有序GUID.md', 0, 0, '2020-12-13 00:10:09', 0, '背景常见的一种数据库设计是使用连续的整数为做主键，当新的数据插入到数据库时，由数据库自动生成。但这种设计不一定适合所有场景。随着越来越多的使用Nhieate、EtityFamewok等ORM（对象关系映射）框架，应用程序被设计成为工作单元（');
INSERT INTO `articles` VALUES (174, 29, '数据库锁', '数据库锁.md', 0, 0, '2020-12-13 00:10:38', 0, '1 前言 数据库大并发操作要考虑死锁和锁的性能问题。看到网上大多语焉不详(尤其更新锁），所以这里做个简明解释，为下面描述方便，这里用T1代表一个数据库执行请求，T2代表另一个请求，也可以理解为T1为一个线程，T2 为另一个线程。T3,T4以');
INSERT INTO `articles` VALUES (175, 29, 'OpenStack云计算之路-Mitaka 版本', 'OpenStack云计算之路-Mitaka 版本.md', 2, 0, '2020-12-13 00:11:18', 0, '云计算简介云计算（英语：cloud comutig ），是一种基于互联网的计算方式，通过这种方式，共享的软硬件资源和信息可以按需求提供给计算机各种终端和其他设备。img c=\"htt://image2017.clog.com/log/119');
INSERT INTO `articles` VALUES (176, 29, 'SOA、ESB、NServiceBus、云计算 总结', 'SOA、ESB、NServiceBus、云计算 总结.md', 2, 0, '2020-12-13 00:11:40', 0, 'NSeviceBu doe, ad the achitectual imlicatio ae ofoud.）。  NSeviceBu 相对于 WCF 的优势在于：事件驱动的架构（发布、订阅）、更好地支持长时间运行的工作流。  缺点一：只支持');
INSERT INTO `articles` VALUES (177, 29, '博客园官方博客', '博客园官方博客.md', 2, 0, '2020-12-13 00:12:04', 0, 'a hef=\"htt://www.clog.com/cmt/tag/%E4%BA%91%E8%AE%A1%E7%AE%97/\" taget=\"_lak\"云计算之路/a系列博文分享的是我们将网站从IDC机房迁移至云计算平台的实际经历，目前处于');
INSERT INTO `articles` VALUES (178, 29, '云计算-从基础到应用架构系列-云计算的概念', '云计算-从基础到应用架构系列-云计算的概念.md', 1, 0, '2020-12-13 00:12:29', 0, '开篇lockquote 本篇是主要讲述什么是云计算，并且讲述云计算相比之前的一些比较新兴的计算模式之间的区别，并且简单的分析下云计算相比这些传统的企业应用模式之间的优势及优缺点。由于本篇是云计算系列的开篇，可能概念性的内容相对来说多一些，我');
INSERT INTO `articles` VALUES (179, 29, '云计算-从基础到应用架构系列-云计算的演进', '云计算-从基础到应用架构系列-云计算的演进.md', 0, 0, '2020-12-13 00:12:53', 0, '开篇lockquote 本篇是主要讲述云计算的发展历程，由于云计算本身提出来也不是太久，并且其实云计算也是经过前人的一些经验总结提出，所以我们对之前的一些计算机的发展史有个一定的了解，那么对云计算的理解就更深入了，当今信息化技术的飞速发展，');
INSERT INTO `articles` VALUES (180, 29, '云计算之路：云存储的纠结', '云计算之路：云存储的纠结.md', 0, 0, '2020-12-13 00:13:15', 0, 'a hef=\"htt://www.clog.com/cmt/tag/%E4%BA%91%E8%AE%A1%E7%AE%97/\" taget=\"_lak\"云计算之路/a系列博文分享的是我们将网站从IDC机房迁移至云计算平台的实际经历，目前处于');
INSERT INTO `articles` VALUES (181, 29, '云计算资源分享与下载', '云计算资源分享与下载.md', 1, 0, '2020-12-13 00:13:40', 0, '摘要　　自从上一篇a hef=\"htt://www.clog.com/KightWaio/achive/2010/09/08/1821098.html\"实战第一个云程序/a之后，我就没有再发布云计算相关的文章，这些天重新整理了一下草稿箱，发');
INSERT INTO `articles` VALUES (182, 26, 'AI人工智能-Python实现人机对话', 'AI人工智能-Python实现人机对话.md', 2, 0, '2020-12-13 00:59:08', 0, '【前言】 　　AI　　在人工智能进展的如火如荼的今天，我们如果不尝试去接触新鲜事物，马上就要被世界淘汰啦~　　本文拟使用Pytho开发语言实现类似于WIdow平台的“小娜”，或者是IOS下的“Sii”。最终达到人机对话的效果。 【实现功能】');
INSERT INTO `articles` VALUES (183, 26, '不是技术也能看懂云计算，大数据，人工智能', '不是技术也能看懂云计算，大数据，人工智能.md', 2, 0, '2020-12-13 00:59:47', 0, '我今天要讲这三个话题，一个是云计算，一个大数据，一个人工智能，我为什么要讲这三个东西呢？因为这三个东西现在非常非常的火，它们之间好像互相有关系，一般谈云计算的时候也会提到大数据，谈人工智能的时候也会提大数据，谈人工智能的时候也会提云计算。所');
INSERT INTO `articles` VALUES (184, 26, '你所未知的人工智能应用领域', '你所未知的人工智能应用领域.md', 1, 0, '2020-12-13 01:00:20', 0, 'lockquote简评：对有些人来说，人工智能和机器人技术的普及对我们的隐私、工作甚至人身安全构成了威胁，因为越来越多的任务不是由人脑，而是由「硅脑」来执行。然而，即便是最直言不讳的批评者，也不得不承认人工智能为人类带来的诸多潜在好处。/l');
INSERT INTO `articles` VALUES (185, 26, '人工智能的概念', '人工智能的概念.md', 0, 0, '2020-12-13 01:00:50', 0, 'fot face=\"宋体\" ize=\"2\"**人工智能概念**/fot    - fot face=\"宋体\" ize=\"2\"**人工智能就是用人工方法在机器（计算机）上实现的智能，w或称机器智能，w即是研究如何用计算机来表示和执行人类的智能');
INSERT INTO `articles` VALUES (186, 26, '人工智能的局限性', '人工智能的局限性.md', 1, 0, '2020-12-13 01:01:34', 0, '转自王垠博客中的一篇文章，非常喜欢这篇文章。转载到自己博客里来。 人工智能的局限性有人听说我想创业，给我提出了一些“忽悠”的办法。他们说，既然你是程序语言专家，而现在人工智能（AI）又非常热，那你其实可以搞一个“自动编程系统”，号称可以自动');
INSERT INTO `articles` VALUES (187, 26, '人工智能发展及算法', '人工智能发展及算法.md', 1, 0, '2020-12-13 01:02:08', 0, '1、智能的分类：感知——》记忆和思维——》学习和自适应——》决策与执行img c=\"htt://image2015.clog.com/log/150046/201611/150046-20161113165342155-298942522.');
INSERT INTO `articles` VALUES (188, 26, '人工智能之机器学习常见算法', '人工智能之机器学习常见算法.md', 2, 0, '2020-12-13 01:02:45', 0, 'img c=\"htt://image2017.clog.com/log/1248689/201711/1248689-20171121164207040-89390405.g\" alt=\"\"摘要之前一直对机器学习很感兴趣,一直没时间去研究,');
INSERT INTO `articles` VALUES (189, 26, 'web移动开发最佳实践之html', 'web移动开发最佳实践之html.md', 1, 0, '2020-12-13 01:03:38', 0, '**一、前言**　　在目前的**移动应用开发**大潮下，使用**we技术**进行移动应用开发正变得越来越流行，它主要使用**html5、c3、j**等技术，在**跨平台性、可移植性**方面具有无可比拟的优势，特别适合开发**对性能要求不太高');
INSERT INTO `articles` VALUES (190, 26, '关于移动端开发的一些总结', '关于移动端开发的一些总结.md', 0, 0, '2020-12-13 01:04:22', 0, '**一、前言**　　在目前的**移动应用开发**大潮下，使用**we技术**进行移动应用开发正变得越来越流行，它主要使用**html5、c3、j**等技术，在**跨平台性、可移植性**方面具有无可比拟的优势，特别适合开发**对性能要求不太高');
INSERT INTO `articles` VALUES (191, 26, '移动web开发之视口viewport', '移动web开发之视口viewport.md', 0, 0, '2020-12-13 01:05:03', 0, '前面的话　　在CSS标准文档中，视口viewot被称为初始包含块。这个初始包含块是所有CSS百分比宽度推算的根源，它给CSS布局限制了一个最大宽度。在桌面上，视口的宽度和浏览器窗口的宽度一致。而在移动端，视口分为布局视口(layout vi');
INSERT INTO `articles` VALUES (192, 26, '移动端页面开发的两种方式', '移动端页面开发的两种方式.md', 1, 0, '2020-12-13 01:05:38', 0, '之前一直做的是we端，换工作之后重心变成了移动端，尝试几次之后总结了两种移动端页面的开发模式，可以自适应各种屏幕大小。希望对大家有所帮助。\\(▔＾▔)/ 一、使用meta标签使网页宽度自适应手机屏幕ytho1 meta ame=\"viewo');
INSERT INTO `articles` VALUES (193, 26, '移动端页面开发流程', '移动端页面开发流程.md', 1, 0, '2020-12-13 01:06:11', 0, '移动端页面布局 一、移动端a分类 1、Native A原生a手机应用程序　　使用原生的语言开发的手机应用，Adoid系统用的是java，io系统用的是oject-C 2、Hyid A 混合型a手机应用程序　　混合使用原生的程序和html5页');
INSERT INTO `articles` VALUES (194, 26, '移动开发屏幕适配信息', '移动开发屏幕适配信息.md', 1, 0, '2020-12-13 01:06:51', 0, '我在开发前端的时候曾经会有几个疑惑：1）拿到的设计搞的宽度是640x或750x的，在页面不同尺寸屏幕布局的时候怎么换算。2）移动端布局是用%、x、a hef=\"htt://develoe.mozilla.og/zh-CN/doc/We/CS');
INSERT INTO `articles` VALUES (195, 26, '移动开发中页面如何优化', '移动开发中页面如何优化.md', 0, 0, '2020-12-13 01:07:27', 0, 'tyle.title { ackgoud: ga(109, 189, 196, 1) colo: ga(255, 255, 255, 1) addig: 5x 10x magi: 5x auto lie-height: 26x -wekit');
INSERT INTO `articles` VALUES (196, 26, '程序人生的四个象限和两条主线', '程序人生的四个象限和两条主线.md', 3, 0, '2020-12-13 01:10:09', 0, '转载之前读过的一篇好文章，收藏在这里，长读长新。原文 a hef=\"htt://ftqq.com/2013/12/codig-life/\"htt://ftqq.com/2013/12/codig-life//a 作者 a hef=\"htt:');
INSERT INTO `articles` VALUES (197, 26, '程序员人生之路', '程序员人生之路.md', 0, 0, '2020-12-13 01:11:30', 0, '当你选择计算机或者电子、自控等专业进入大学时，你本来还是有机会从事其它行业的，可你毕业时执迷不悟，仍然选择了开发做为你的职业，真是自做孽不可活。不过，欢迎你和我一样加入这个被其它人认为是风光无限的“白领”吧。　　如果你不是特别的与人世隔绝，');
INSERT INTO `articles` VALUES (198, 26, '多彩的程序人生', '多彩的程序人生.md', 3, 0, '2020-12-13 01:12:07', 0, '常常想程序人生的问题，也常常在网上看程序人生相关的话题，但听大师讲程序人生，还是第一次。这位大师，就是侯捷。侯捷，两岸著名技术教育者，计算机图书作者、译者、书评人，著有《深入浅出MFC》、《多型与虚拟》、《STL源码剖析》、《无责任书评》三');
INSERT INTO `articles` VALUES (199, 26, '九年程序人生经验分享', '九年程序人生经验分享.md', 0, 0, '2020-12-13 01:13:51', 0, '时间一晃而过，大学毕业转眼间已经工作9年了，总结一下自己这些年来感受。 **与程序打交道的人生，是简单的人生**一次做规划局的项目，规划局的职员很是钦佩地说：“你们真了不起，在电脑上敲敲键盘就能做出软件来。”，规划局领导说：“跟电脑打交道是');
INSERT INTO `articles` VALUES (200, 26, '浅谈程序员的行业选择---程序人生', '浅谈程序员的行业选择---程序人生.md', 2, 0, '2020-12-13 01:14:17', 0, '引言　　本篇博文接着许久之前的一篇博文《a hef=\"htt://www.clog.com/zuoxiaolog//life15.html\" taget=\"_lak\"浅谈程序猿的职业规划，看你如何决定自己的未来吧。/a》，继续探讨一下程序员');
INSERT INTO `articles` VALUES (201, 26, '十年程序人生规划', '十年程序人生规划.md', 6, 0, '2020-12-13 01:14:48', 0, '一、人生格言　　不要被生活主宰，要自己主宰生活；　　学习代表过去，能力代表现在，努力代表未来；　　当要做某件事情的时候，请在心里问自己下面这些内容？　　　　（1）这方面知识有什么意义；　　　　（2）学习这方面的哪些知识；　　　　（3）多长时');
INSERT INTO `articles` VALUES (202, 26, '我的程序员人生-学习篇（如何开始，如何入门，如何前进）', '我的程序员人生-学习篇（如何开始，如何入门，如何前进）.md', 0, 0, '2020-12-13 01:15:30', 0, 'lockquote 本人程序狗，毕业4年有余，敲了三年java，自学了近半年ytho，liux也算入了门，换了两家公司，干过外包，进过创业公司，架构过项目，带过团队，最近闲情雅致，胡思乱想起来，随便写点~~/lockquotelockquo');
INSERT INTO `articles` VALUES (203, 28, '计算机基础系列一：计算机硬件', '计算机基础系列一：计算机硬件.md', 0, 0, '2020-12-13 01:16:42', 0, '一 为何要学习计算机基础ytho是编程语言，即ytho是语言语言有英语、法语、葡萄牙语等，但凡是语言，都是用来沟通的介质。程序员编程的本质就是让计算机去工作，而编程语言就是程序员与计算机沟通的介质程序员要想让计算机工作，必须知道计算机能干什');
INSERT INTO `articles` VALUES (204, 28, '计算机基础之计算机硬件基础', '计算机基础之计算机硬件基础.md', 0, 0, '2020-12-13 01:17:20', 0, '**一.****计算机硬件系统概述**所谓计算机硬件系统，就是指构成计算机看得见的，摸得着的实际物理设备。常见的计算机硬件组成主要由下图各部件组成：img c=\"htt://image2015.clog.com/log/1195739/20');
INSERT INTO `articles` VALUES (205, 28, '计算机基础之进制转换详解', '计算机基础之进制转换详解.md', 1, 0, '2020-12-13 01:17:59', 0, '　　　　进制转换是个老问题了，今天恰巧看见。我详细的去分析下它。留一笔吧　　　　二进制的范围是(0-1)， 不包含2　　　　八进制的范围是(0-7) ，不包含8　　　　十六进制的范围是(0-15) ，不包含16　　　 先讲十进制----二进');
INSERT INTO `articles` VALUES (206, 28, '计算机基础知识', '计算机基础知识.md', 0, 0, '2020-12-13 01:18:41', 0, '　　**一、为何要学习计算机基础？**好多人觉得自己有点基础就都想着直接敲代码，觉得基础知识很容易，很简单，就不怎么用心去学。然而，我觉得基础知识很重要。就像盖一栋楼房一样，你先要打好地基，再去盖房。 　　　　　Pytho是一门编程语言，即');
INSERT INTO `articles` VALUES (207, 28, '计算机基础知识之编程', '计算机基础知识之编程.md', 0, 0, '2020-12-13 01:19:20', 0, '目录- a hef=\"一、什么是编程语言？\"一、什么是编程语言？/a- a hef=\"二、什么是编程？\"二、什么是编程？/a- a hef=\"三、为什么要编程？\"三、为什么要编程？/a 一、什么是编程语言？Pytho和中文、英语语一样，都是');
INSERT INTO `articles` VALUES (208, 28, '计算机基础知识总结', '计算机基础知识总结.md', 0, 0, '2020-12-13 01:20:04', 0, '**第一篇：计算机基础****1. 计算机发展史中计算机诞生时间的三个第一 **世界上发明的第一台电子计算机 ENIA C 1946.2 美国 世界上第一台按存储程序控制功能设计的计算机 EDVA C 1946 1950 美国 世界上第一台');
INSERT INTO `articles` VALUES (209, 28, '计算机入门基础知识', '计算机入门基础知识.md', 0, 0, '2020-12-13 01:20:31', 0, '好久以前帮学弟学妹们总结的计算机入门基础资料，我觉得算是很好的科普入门资料了。毕竟是我辛苦一字一字写出来的。。。 目录 img c=\"htt://image2015.clog.com/log/749242/201611/749242-201');
INSERT INTO `articles` VALUES (210, 28, '常见的物联网通信方式', '常见的物联网通信方式.md', 0, 0, '2020-12-13 01:21:41', 0, '常见的物联网通信方式 legaheo 谢 QQ:1395449850一、前言 　　早期的物联网是指两个或多个设备之间在近距离内的数据传输，解决物物相连，早期多采用有线方式，比如RS323、RS485，考虑设备的位置可随意移动的方便性（有根线');
INSERT INTO `articles` VALUES (211, 28, '超越Web，Javascript在物联网的应用', '超越Web，Javascript在物联网的应用.md', 1, 0, '2020-12-13 01:22:47', 0, '**引子**Patick Catazaiti 是一名We开发工程师，最近他在 a hef=\"htt://www.iteoit.com/\"iteoit/a 发表了《a hef=\"htt://www.iteoit.com/javacit-eyo');
INSERT INTO `articles` VALUES (212, 28, '物联网常见通信协议梳理', '物联网常见通信协议梳理.md', 1, 0, '2020-12-13 01:23:27', 0, '1 概述在上一篇文章《物联网常见通信协议与通讯协议梳理【上】-通讯协议》中，对物联网常用通信协议和通讯协议作了区分，并对通讯协议进行了分享；本文将对常用的通信协议进行剖析，重点面向市场上使用率较高的，且又不是诸如TCP/IP之类老生常谈的。');
INSERT INTO `articles` VALUES (213, 28, '物联网环境下数据分析的应用', '物联网环境下数据分析的应用.md', 1, 0, '2020-12-13 01:24:02', 0, '前记：这是我老婆写的一篇文章，结合了她当前的分析工作和物联网，介绍了物联网环境下数据分析的应用。 物联网概论及国内外研究现状“物联网概念”是在“互联网概念”的基础上，将其用户端延伸和扩展到任何物品与物品之间，进行信息交换和通信的一种网络概念');
INSERT INTO `articles` VALUES (214, 28, '物联网基础组件IoTClient开发系列', '物联网基础组件IoTClient开发系列.md', 0, 0, '2020-12-13 01:24:37', 0, '前记：这是我老婆写的一篇文章，结合了她当前的分析工作和物联网，介绍了物联网环境下数据分析的应用。 物联网概论及国内外研究现状“物联网概念”是在“互联网概念”的基础上，将其用户端延伸和扩展到任何物品与物品之间，进行信息交换和通信的一种网络概念');
INSERT INTO `articles` VALUES (215, 28, '物联网——下一块大蛋糕', '物联网——下一块大蛋糕.md', 1, 0, '2020-12-13 01:25:14', 0, '物联网——下一块大蛋糕作者：a hef=\"htt://ee.clog.com/\"一点一滴的Bee/aa hef=\"htt://ee.clog.com/\"/aa hef=\"htt://ee.clog.com/\"htt://ee.clog.co');
INSERT INTO `articles` VALUES (216, 28, '物联网智能硬件设备常见攻击方法', '物联网智能硬件设备常见攻击方法.md', 0, 0, '2020-12-13 01:25:41', 0, '以太网接入型设备，一般分为网线或WiFi两种。不管是WiFi还是网线，可以通过局域网抓包、笔记本WiFi桥接抓包等等手段。最著名的抓包软件 Wiehak如何抓取硬件设备的网络数据包，考量的是网络知识基本功，需要大家自行度娘！基本准备工作：1');
INSERT INTO `articles` VALUES (217, 28, '前端UI框架小汇总', '前端UI框架小汇总.md', 2, 0, '2020-12-13 01:26:31', 0, '前言：　　近期，小弟根据GitHu、前端社区、掘金等平台对当前流行的前端UI框架的进行了小小的整理和汇总（：前端UI框架的应用是通过GitHu ta数，社区热度和使用范围等进行的粗略的汇总【不分先后】）。希望对寻找UI框架的小伙伴们提供点帮');
INSERT INTO `articles` VALUES (218, 28, '前端编码规范之JavaScript', '前端编码规范之JavaScript.md', 1, 0, '2020-12-13 01:26:56', 0, '　　上次浅谈了下a hef=\"htt://www.clog.com/hutkykig//c-ec.html\" taget=\"_lak\"关于CSS的编码规范/a，大部分童鞋持赞同意见，仍存在一些童鞋不太理解这些规范的意义。　　如果是个人或者小');
INSERT INTO `articles` VALUES (219, 28, '前端规范之css', '前端规范之css.md', 2, 0, '2020-12-13 01:27:34', 0, '　　\"字是门面书是屋\"，我们不会去手写代码，但是敲出来的代码要好看、有条理，这还必须得有一点约束~　　团队开发中，每个人的编码风格都不尽相同，有时候可能存在很大的差异，为了便于压缩组件对代码进行压缩以及书写样式的规范统一和美观，很有必要大家');
INSERT INTO `articles` VALUES (220, 28, '前端面试题目搜集', '前端面试题目搜集.md', 1, 0, '2020-12-13 01:27:58', 0, '最近读到一本与前端面试有关的书《a hef=\"htt://ook.doua.comuject/30324146/\" taget=\"_lak\"前端程序员面试笔试宝典/a》，里面的内容很多都是高频的面试题，在此推荐给各位网友。img c=\"ht');
INSERT INTO `articles` VALUES (221, 28, '前端模块化', '前端模块化.md', 1, 0, '2020-12-13 01:28:28', 0, '前端模块化在JavaScit发展初期就是为了实现简单的页面交互逻辑，寥寥数语即可；如今CPU、浏览器性能得到了极大的提升，很多页面逻辑迁移到了客户端（表单验证等），随着we2.0时代的到来，Ajax技术得到广泛应用，jQuey等前端库层出不');
INSERT INTO `articles` VALUES (222, 28, '我所理解的前端', '我所理解的前端.md', 3, 0, '2020-12-13 01:28:53', 0, '入坑前端到今天也将近两年半了,这两天突然想到了第一次面试时面试官的一个问题-------你怎样理解前端的工作?对于当时我一个小白而言完全是胡说一通,词不达意,搞得面试官一脸懵逼,现在想想那可能就叫尬聊吧……时隔两年在不断爬坑中对这个问题有了');
INSERT INTO `articles` VALUES (223, 28, '最全前端资源汇总', '最全前端资源汇总.md', 0, 0, '2020-12-13 01:29:46', 0, '一、概要这份汇总整理，很程度上参考了GitHu最全前端资源汇总；云集前端教程、开发资源、免费书籍、手册规范、求职面试等等，旨在为前端学习 am 技能提升提供方便。当然，并不期望这成为一个前端武学收藏夹；毕竟，只有自己掌握，才是真正拥有；况且');
INSERT INTO `articles` VALUES (224, 28, '极简入门：什么是区块链', '极简入门：什么是区块链.md', 0, 0, '2020-12-13 01:30:33', 0, '前阵子在油管看到了一个介绍区块链的短视频，把区块链讲得很清楚，于是我把它翻译一下分享给大家。相信大家看了这篇文章，基本上能够理解什么是区块链了。**区块链，顾名思义，它是由一组包含信息的区块组成的信息链。**img c=\"htt://3q6');
INSERT INTO `articles` VALUES (225, 28, '区块链（Blockchain）', '区块链（Blockchain）.md', 0, 0, '2020-12-13 01:31:16', 0, '一 、什么是区块链？区块链（Blockchai）是由节点参与的分布式数据库系统a id=\"efmak-1\" cla=\"f-ef-mak\" hef=\"footote-1\"u[1]u/a，它的特点是不可更改，不可伪造，也可以将其理解为账簿系统(');
INSERT INTO `articles` VALUES (226, 28, '区块链笔记', '区块链笔记.md', 1, 0, '2020-12-13 01:31:46', 0, '广义和狭义的区块链广义来讲，区块链技术是利用块链式数据结构来验证与存储数据、利用分布式节点共识算法来生成和更新数据、利用密码学的方式保证数据传输和访问的安全、利用由自动化脚本代码组成的智能合约来编程和操作数据的一种全新的**分布式基础架构与');
INSERT INTO `articles` VALUES (227, 28, '区块链入门与理解 ，什么是区块什么是链', '区块链入门与理解 ，什么是区块什么是链.md', 0, 0, '2020-12-13 01:32:13', 0, '本文重点?- 用SHA256算法得到哈希值- 挖矿起什么作用- 块是怎么连接成链的 基本要素:哈希算法哈希看起来就像是一串64位的随机的16进制的字符串, 本质上是某些数字数据的一个指纹 也就是说每个不同的(文本)内容都有对应不同的指纹(哈');
INSERT INTO `articles` VALUES (228, 28, '区块链学习路线', '区块链学习路线.md', 1, 0, '2020-12-13 01:32:43', 0, 'tyle.1 { magi: 0 fot: 24x \"Helvetica Neue\" colo: ga(51, 51, 51, 1) -wekit-text-toke: 333333 }.2 { magi: 0 fot: 16x \"Helv');
INSERT INTO `articles` VALUES (229, 28, '通俗易懂的讲解区块链', '通俗易懂的讲解区块链.md', 2, 0, '2020-12-13 01:33:17', 0, '最近，区块链很火，刚刚在人大会上又火了一把。之所以如此，是因为区块链既是全新的技术方案、交易模式和商业逻辑，同时也是一种全新的制度机制。区块链的“网红效应”才刚刚开始。 本文的主要思想来自于区块链：即使技术方案，也是制度机制。我也是一个区块');
INSERT INTO `articles` VALUES (230, 28, '用Python从零开始创建区块链', '用Python从零开始创建区块链.md', 0, 0, '2020-12-13 01:33:50', 0, '最新内容会更新在主站a hef=\"htt://lealockchai.c/\" taget=\"_lak\"深入浅出区块链社区/a原文链接:a hef=\"htt://lealockchai.c/2017/10/27/uild_lockchai_y');
INSERT INTO `articles` VALUES (231, 28, 'Linux架构', 'Linux架构.md', 0, 0, '2020-12-13 01:34:34', 0, '作者：Vamei 出处：htt://www.clog.com/vamei 欢迎转载，也请保留这段声明。谢谢！我以下图为基础，说明Liux的架构(achitectue)。(该图参考《a hef=\"htt://ook.doua.comuject');
INSERT INTO `articles` VALUES (232, 28, '理解MySQL——架构与概念', '理解MySQL——架构与概念.md', 1, 0, '2020-12-13 01:34:58', 0, '写在前面：最早接触的MySQL是在三年前，那时候MySQL还是4.x版本，很多功能都不支持，比如，存储过程，视图，触发器，更别说分布式事务等复杂特性了。但从5.0(2005年10月)开始，MySQL渐渐步入企业级数据库的行列了；复制、集群、');
INSERT INTO `articles` VALUES (233, 28, '逻辑架构和物理架构', '逻辑架构和物理架构.md', 0, 0, '2020-12-13 01:35:23', 0, '在实际工作中，我们经常听到“架构”和“架构师”这样的名词，并不新鲜，但是总让很多刚入门的人感觉很神秘，甚至是高深莫测。很少有人对“架构”有全面的了解和认识能并说清楚架构是什么，更谈不上掌握了。事实上，也只有极少数人能成为或者被冠以“架构师”');
INSERT INTO `articles` VALUES (234, 28, '你离架构师还有多远', '你离架构师还有多远.md', 0, 0, '2020-12-13 01:35:51', 0, '　　软件架构师在整个软件开发过程中都起着重要的作用，并随着开发进程的推进而其职责或关注点不断地变化，总结下面几点。lockquote　　在需求阶段，软件架构师主要负责理解和管理非功能性系统需求，比如软件的可维护性、性能、复用性、可靠性、有效');
INSERT INTO `articles` VALUES (235, 28, '三层架构和MVC模式', '三层架构和MVC模式.md', 0, 0, '2020-12-13 01:36:37', 0, '目录[-]- a hef=\"htt://my.ochia.et/u/1020238/log/519767OSC_h3_1\"1、三层架构/a- a hef=\"htt://my.ochia.et/u/1020238/log/519767OSC_');
INSERT INTO `articles` VALUES (236, 28, '什么是架构', '什么是架构.md', 0, 0, '2020-12-13 01:37:07', 0, '　　早上醒来打开手机，浏览完该看的信息后，随意点看某脉求职，由于自己定制的都是架构和开发类别，所以看到的招聘几乎都是架构师职位，薪酬几乎都在30~50K/月，好是羡慕（几乎都是招Java架构的......看来还是得加快学习进度，转型速度要快');
INSERT INTO `articles` VALUES (237, 28, '网站服务架构', '网站服务架构.md', 1, 0, '2020-12-13 01:37:34', 0, '服务器划分 对于访问量大的网站而言，将网站的各个部分拆分分别部署到不同服务器上是很有必要的。例如将图片和we站点分开。一般而言，在网站的整个服务器部署上分为如下几种类型： **文件服务器：**一般存储系统的相关图片和文件，给各个子系统提供统');
INSERT INTO `articles` VALUES (238, 34, '456', '456.md', 2, 0, '2020-12-14 15:45:36', 0, '122这里是edito的内');
INSERT INTO `articles` VALUES (239, 37, '456789', '456789.md', 5, 0, '2020-12-14 15:48:04', 3, '这里是edito的内');

-- ----------------------------
-- Table structure for comments
-- ----------------------------
DROP TABLE IF EXISTS `comments`;
CREATE TABLE `comments`  (
  `comment_id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT '评论ID',
  `user_id` bigint(0) NOT NULL COMMENT '发表用户ID',
  `user_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `article_id` bigint(0) NOT NULL COMMENT '评论博文ID',
  `article_title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '被评论的博文名字',
  `comment_date` datetime(0) NULL DEFAULT NULL COMMENT '评论日期',
  `comment_content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '评论内容',
  PRIMARY KEY (`comment_id`) USING BTREE,
  INDEX `article_id`(`article_id`) USING BTREE,
  INDEX `comment_date`(`comment_date`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 17 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of comments
-- ----------------------------
INSERT INTO `comments` VALUES (7, 2, 'loginTest', 27, NULL, '2020-12-09 22:28:35', '评论');
INSERT INTO `comments` VALUES (11, 3, 'login', 32, NULL, '2020-12-10 19:10:07', '评论');
INSERT INTO `comments` VALUES (12, 2, 'loginTest', 27, NULL, '2020-12-10 19:11:37', '456');
INSERT INTO `comments` VALUES (13, 3, 'login', 32, NULL, '2020-12-10 19:26:57', '678');
INSERT INTO `comments` VALUES (14, 2, 'loginTest', 32, NULL, '2020-12-10 19:29:17', '789');
INSERT INTO `comments` VALUES (15, 2, 'loginTest', 27, 'EL', '2020-12-10 20:34:16', 'test');
INSERT INTO `comments` VALUES (16, 2, 'loginTest', 27, 'EL', '2020-12-10 20:38:07', '123456');
INSERT INTO `comments` VALUES (17, 37, 'ab123456', 138, '解读5G标准：5G频率范围与频段', '2020-12-14 15:50:40', '12345');
INSERT INTO `comments` VALUES (18, 37, 'ab123456', 138, '解读5G标准：5G频率范围与频段', '2020-12-14 15:50:47', '123');

-- ----------------------------
-- Table structure for labels
-- ----------------------------
DROP TABLE IF EXISTS `labels`;
CREATE TABLE `labels`  (
  `label_id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT '标签ID',
  `label_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '标签名称',
  `label_alias` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '标签别名',
  `label_description` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '标签描述',
  PRIMARY KEY (`label_id`) USING BTREE,
  INDEX `label_name`(`label_name`) USING BTREE,
  INDEX `label_alias`(`label_alias`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for set_artitle_label
-- ----------------------------
DROP TABLE IF EXISTS `set_artitle_label`;
CREATE TABLE `set_artitle_label`  (
  `article_id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT '文章ID',
  `label_id` bigint(0) NOT NULL COMMENT '标签ID',
  PRIMARY KEY (`article_id`) USING BTREE,
  INDEX `label_id`(`label_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for set_artitle_sort
-- ----------------------------
DROP TABLE IF EXISTS `set_artitle_sort`;
CREATE TABLE `set_artitle_sort`  (
  `article_id` bigint(0) NOT NULL COMMENT '文章ID',
  `sort_id` bigint(0) NOT NULL COMMENT '分类ID',
  PRIMARY KEY (`article_id`, `sort_id`) USING BTREE,
  INDEX `sort_id`(`sort_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for sorts
-- ----------------------------
DROP TABLE IF EXISTS `sorts`;
CREATE TABLE `sorts`  (
  `sort_id` bigint(0) NOT NULL COMMENT '分类ID',
  `sort_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '分类名称',
  `sort_alias` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '分类别名',
  `sort_description` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '分类描述',
  `parent_sort_id` bigint(0) NOT NULL COMMENT '父分类ID',
  PRIMARY KEY (`sort_id`) USING BTREE,
  INDEX `sort_name`(`sort_name`) USING BTREE,
  INDEX `sort_alias`(`sort_alias`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for user_friends
-- ----------------------------
DROP TABLE IF EXISTS `user_friends`;
CREATE TABLE `user_friends`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT '标识ID',
  `user_id` bigint(0) NOT NULL COMMENT '用户ID',
  `user_friends_id` bigint(0) NOT NULL COMMENT '好友ID',
  `user_note` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '好友备注',
  `user_status` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '好友状态',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `user_id`(`user_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `user_id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT '用户ID',
  `user_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户名',
  `user_password` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户密码',
  `user_profile_photo` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户头像',
  `user_registration_time` datetime(0) NULL DEFAULT NULL COMMENT '注册时间',
  `user_birthday` date NULL DEFAULT NULL COMMENT '用户生日',
  `user_age` tinyint(0) NULL DEFAULT NULL COMMENT '用户年龄',
  `user_telephone_number` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '用户手机号',
  PRIMARY KEY (`user_id`) USING BTREE,
  INDEX `user_name`(`user_name`) USING BTREE,
  INDEX `user_telephone_number`(`user_telephone_number`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 34 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES (2, 'loginTest', '456', 'loginTest.jpg', NULL, NULL, 18, '123456');
INSERT INTO `users` VALUES (3, 'login', '456', 'login.jpg', NULL, '3895-02-17', 5, '15270696715');
INSERT INTO `users` VALUES (23, '王', '123456', 'default.png', '2020-12-08 22:00:13', '1995-01-17', 0, '123456');
INSERT INTO `users` VALUES (24, 'XikX', '123456', 'default.png', '2020-12-10 10:47:40', '2000-02-25', 0, '15970984655');
INSERT INTO `users` VALUES (25, '张三丰', '123456', 'default.png', '2020-12-10 10:50:22', '1998-04-13', 0, '15270696715');
INSERT INTO `users` VALUES (26, '夏书童', '123456', 'default.png', '2020-12-10 19:00:59', '2001-02-12', 0, '18270648268');
INSERT INTO `users` VALUES (27, '熊麟', '123456', 'default.png', '2020-12-10 19:08:42', '2001-02-12', 0, '12345678910');
INSERT INTO `users` VALUES (28, '王健帆', '123456', '王健帆.jpg', '2020-12-10 19:14:06', '2001-02-12', 0, '12345678910');
INSERT INTO `users` VALUES (29, '汤运', '123456', 'default.png', '2020-12-10 19:58:22', '1995-01-17', 0, '15970514455');
INSERT INTO `users` VALUES (30, '童金燕', '123456', 'default.png', '2020-12-10 20:06:04', '2001-01-01', 0, '12345678910');
INSERT INTO `users` VALUES (31, '丁毅凡', '123456', '丁毅凡.jpg', '2020-12-10 20:15:35', '2001-01-01', 0, '12345678910');
INSERT INTO `users` VALUES (32, '蔡秋淼', '123456', 'default.png', '2020-12-10 20:26:11', '2001-01-01', 0, '12345678910');
INSERT INTO `users` VALUES (33, '栀子', '123456', 'default.png', '2020-12-10 20:42:31', '1995-01-17', 0, '15978523545');
INSERT INTO `users` VALUES (34, 'aa123456', '123456', 'aa123456.jpg', '2020-12-14 15:42:22', '1995-01-17', 0, '15270696715');
INSERT INTO `users` VALUES (37, 'ab123456', '123456', NULL, '2020-12-14 15:47:48', '1995-01-17', 0, '15270696715');

SET FOREIGN_KEY_CHECKS = 1;
